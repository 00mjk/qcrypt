#
# A qcryptd configuration example for a single qcrypt chain. Each chain must be configured in a separate
# configuration file.
#
# qcryptd will manage all chains which reside in the same 'target' folder specified during the qcryptd
# start operation.
#

# VM where the encrypted container will be found once the source device is available (required).
source vm=sys-usb

# Block device on which the luks container resides (optional). It is recommended to specify it with a unique
# identifier, e.g. by UUID. qcryptd will wait for this device and all necessary VMs to become available before
# attempting to start the qcrypt chain.
#
# Not specifying any device will cause qcryptd to assume that the source file is always available in the root
# file system (/).
source device=/dev/disk/by-uuid/8c3663c5-b9345-6381-9a67-dd813eb12863

# Mount point to use for the source device inside the source VM (optional). Not specifying a mount point will
# cause qcryptd to assume that the source device is always available on your local file system (/).
#
# qcryptd will enforce that mount point regardless of whether the device is mounted elsewhere already.
source mount point=/mnt-ex01

# Path relative to the source mount point leading to the encrypted container file inside the source VM (required).
source file=/containers/ex01-container.luks

# Identifier of the key / file name of the key inside the ~/.qcrypt folder of all involved VMs (required)
key=ex01-key

# List of destination VMs to use for the chain (at least one is required) and key injections (optional).
# The VM with the highest number is the one that is meant to read the plaintext.
#
# If you need disposable VMs, use named ones and inject the key! E.g.
# `qvm-create --class DispVM --prop netvm='' --template nonet-dvm -l red d-testing`
#
# A single key injection may be specified per destination VM (default: none).
#
# WARNING: Injecting a key into the wrong VM will cause havoc to whatever security guarantees qcrypt provides.
#          Therefore make sure to not confuse the below indices!
destination vm 1  = d-testing
destination inj 1 = /root/qcrypt-keys/ex01_disp

destination vm 2  = work
#destination inj 2 = 

# Mount point of the plain text data in the destination VM (default: not mounted).
destination mount point=/qcrypt-ex01

# Autostart all VMs required for this chain (default: false).
#autostart=false

# Attach the chain in read-only mode (default: true).
read-only=false

# Command to run _before_ a chain open attempt (default: no command).
# A non-zero exit code of this command will prevent the chain from being started.
#pre open command=logger "starting the ex01 chain"

# Command to run _after_ a successful chain open (default: no command).
#post open command=logger "started the ex01 chain"

# Command to run _before_ a chain close attempt (default: no command).
# The exit code is ignored.
#pre close command=logger "attempting to close the ex01 chain"

# Command to run _after_ a successful chain close (default: no command).
#post close command=logger "stopped the ex01 chain"
